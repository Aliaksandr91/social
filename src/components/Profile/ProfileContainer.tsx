import React from "react";
import {Profile} from "./Profile";
import axios from "axios";
import {AppRootStateType} from "../../store/redux-store";
import {connect} from "react-redux";
import {setUsersProfileAC} from "../../store/profile-reducer";
import {withRouter} from "react-router-dom";

class ProfileContainer extends React.Component<any, any> {

    componentDidMount() {
        let userId = this.props.match.params.userId
        if (!userId) userId = 2
        this.props.setLoader(true)
        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)
            .then(response => {
                this.props.setUserProfile(response.data)
            })
    }

    render() {
        return (
            <Profile {...this.props} profile={this.props.profile}/>
        )
    }
}

const mapStateToProps = (state: AppRootStateType) => {
    return {
        profile: state.profilePage.profile
    }
}
let WithUrlDataContainerComponent = withRouter(ProfileContainer)
export default connect(mapStateToProps, {setUsersProfile: setUsersProfileAC})(WithUrlDataContainerComponent)

//
// –†–µ–±—è—Ç–∞, –∫—Ç–æ –ø–∏—Å–∞–ª –ø—Ä–æ–µ–∫—Ç –Ω–∞ react router v6, –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö—É–∫–∏, –∞ –Ω–µ HOC —à–∞–±–ª–æ–Ω. –ù–æ –ø–æ —Å–∫–æ–ª—å–∫—É –≤ –∫—É—Ä—Å–µ –Ω–∞—à–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω–∞—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ProfileContainer - –∫–ª–∞—Å—Å–æ–≤–∞—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —Ç–æ –º—ã –Ω–µ –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö—É–∫–∏ –≤ –∫–ª–∞—Å—Å–≤–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö. –ï—Å—Ç—å —Ä–µ—à–µ–Ω–∏–µ –∏–∑ –æ—Ñ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ - —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—ë—Ä—Ç–∫—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –∏–¥–µ–Ω—Ç–∏—á–Ω–∞ –∫ withRouter:import {
//     useLocation,
//     useNavigate,
//     useParams,
// } from "react-router-dom";
//
// // wrapper to use react router's v6 hooks in class component(to use HOC pattern, like in router v5)
// function withRouter(Component) {
//     function ComponentWithRouterProp(props) {
//         let location = useLocation();
//         let navigate = useNavigate();
//         let params = useParams();
//         return (
//             <Component
//                 {...props}
//                 router={{ location, navigate, params }}
//             />
//         );
//     }
//
//     return ComponentWithRouterProp;
// }
// –ò —Ç–µ–ø–µ—Ä—å, —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—åüëá
// export default connect(mapStateToProps, {setUserProfile})(withRouter(ProfileContainer));
// –ó–∞—Ç–µ–º, –≤ –∫–ª–∞—Å—Å–µ ProfileContainer –º—ã –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –∞–π–¥–∏—à–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–ø–∏—Å–∞–≤:
// let profileId = this.props.router.params.profileId;
// –ò –≤—Å–µ, –¥–∞–ª—å—à–µ –º–µ–Ω—è–µ–º URL –∑–∞–ø—Ä–æ—Å–∞, –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//
